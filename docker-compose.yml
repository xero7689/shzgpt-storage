version: "3"

x-svc-config: &svc-config
  depends_on:
    - shz-gpt-db
    - shz-gpt-cache

  env_file:
    - ./.env

  environment:
    IN_CONTAINER:
    IS_DEBUG:
    CONTAINER_STORAGE_PATH:
    LOGGING_FILE_NAME:
    DEPLOY_STAGE:
    DJANGO_SECRET_KEY:
    DATABASE_URI:
    DATABASE_DB_NAME:
    DATABASE_USER:
    DATABASE_PASSWD:
    CACHE_URI:
    CACHE_URI_PORT:
    DJANGO_SUPERUSER_USERNAME:
    DJANGO_SUPERUSER_PASSWORD:
    DJANGO_SUPERUSER_EMAIL:
    DJANGO_ADMIN_URL_PATH:
    AWS_S3_REGION:
    AWS_STORAGE_BUCKET_NAME:
    AWS_S3_CACHE_CONTROL_MAX_AGE:
    GIT_USER:
    GIT_PASSWORD:
    CORS_ALLOWED_ORIGIN:
    COOKIES_ALLOWED_DOMAIN:

services:
  shz-gpt-app:
    <<: *svc-config
    container_name: "shz-gpt-storage-app"
    image: shz_gpt_storage:${IMAGE_VERSION:-latest}
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        GIT_USER:
        GIT_PASSWD:
        IS_DEBUG:
        DJANGO_SUPERUSER_USERNAME:
        DJANGO_SUPERUSER_PASSWORD:
        DJANGO_SUPERUSER_EMAIL:
    command: [ "python", "main.py" ]
    volumes:
      - .:/workspace
      - ${HOST_STORAGE_PATH}:${CONTAINER_STORAGE_PATH}
    ports:
      - ${HOST_MAPPING_PORT}:8000
    depends_on:
      - shz-gpt-db
      - shz-gpt-cache

  shz-gpt-db:
    container_name: "shz-gpt-storage-db"
    image: postgres:latest
    environment:
      POSTGRES_DB: "${DATABASE_DB_NAME:-for-development}"
      POSTGRES_USER: "${DATABASE_USER:-devel}"
      POSTGRES_PASSWORD: "${DATABASE_PSSWORD:-for-development}"
    volumes:
      - shz_gpt_db_data:/var/lib/postgresql/data
  shz-gpt-cache:
    container_name: "shz-gpt-redis-cache"
    image: redis:alpine

volumes:
  shz_gpt_db_data:
